[{"/Users/robwatkins/Dev/react-apps/typing-game/src/index.js":"1","/Users/robwatkins/Dev/react-apps/typing-game/src/reportWebVitals.js":"2","/Users/robwatkins/Dev/react-apps/typing-game/src/App.js":"3","/Users/robwatkins/Dev/react-apps/typing-game/src/components/StartScreen.js":"4","/Users/robwatkins/Dev/react-apps/typing-game/src/components/TypingGame.js":"5","/Users/robwatkins/Dev/react-apps/typing-game/src/components/CurrentWords.js":"6","/Users/robwatkins/Dev/react-apps/typing-game/src/components/Level.js":"7","/Users/robwatkins/Dev/react-apps/typing-game/src/components/GameOver.js":"8","/Users/robwatkins/Dev/react-apps/typing-game/src/components/FX.js":"9","/Users/robwatkins/Dev/react-apps/typing-game/src/hooks/useKeyPress.js":"10","/Users/robwatkins/Dev/react-apps/typing-game/src/components/Difficulty.js":"11","/Users/robwatkins/Dev/react-apps/typing-game/src/utils/time.js":"12","/Users/robwatkins/Dev/react-apps/typing-game/src/utils/fetchWords.js":"13"},{"size":507,"mtime":1611424628290,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1611420762882,"results":"16","hashOfConfig":"15"},{"size":697,"mtime":1612977815711,"results":"17","hashOfConfig":"15"},{"size":1013,"mtime":1612640245788,"results":"18","hashOfConfig":"15"},{"size":3126,"mtime":1613086397855,"results":"19","hashOfConfig":"15"},{"size":1552,"mtime":1612626579691,"results":"20","hashOfConfig":"15"},{"size":159,"mtime":1611880535814,"results":"21","hashOfConfig":"15"},{"size":364,"mtime":1613072166495,"results":"22","hashOfConfig":"15"},{"size":389,"mtime":1613001628939,"results":"23","hashOfConfig":"15"},{"size":658,"mtime":1612571071288,"results":"24","hashOfConfig":"15"},{"size":597,"mtime":1612998552732,"results":"25","hashOfConfig":"15"},{"size":54,"mtime":1613071591570,"results":"26","hashOfConfig":"15"},{"size":415,"mtime":1613086148790,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1vuo62a",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/robwatkins/Dev/react-apps/typing-game/src/index.js",[],["57","58"],"/Users/robwatkins/Dev/react-apps/typing-game/src/reportWebVitals.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/App.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/StartScreen.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/TypingGame.js",["59","60"],"import React, { useState, useEffect, useCallback } from 'react';\nimport useSound from 'use-sound';\nimport { fetchWords } from '../utils/fetchWords';\nimport { currentTime } from '../utils/time';\nimport { useKeyPress } from '../hooks/useKeyPress';\nimport Level from './Level';\nimport CurrentWords from './CurrentWords';\nimport correctKeyStroke from '../sounds/correctKeyStroke2.wav';\nimport incorrectKeyStroke from '../sounds/incorrectKeyStroke.wav';\nimport FX from './FX';\nimport GameOver from './GameOver';\nimport Difficulty from './Difficulty';\n\nexport default function TypingGame({ difficulty }) {\n  const [words, setWords] = useState([]);\n  const [startTime, setStartTime] = useState();\n  const [letterIndex, setLetterIndex] = useState(0);\n  const [wordCount, setWordCount] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [scrollSpeed, setScrollSpeed] = useState(25);\n  const [gameOver, setGameOver] = useState(false);\n  const [wpm, setWpm] = useState(0);\n  const [fxEnabled, setFxEnabled] = useState(false);\n  const [playKeystroke] = useSound(correctKeyStroke);\n  const [playMissedKeystroke] = useSound(incorrectKeyStroke);\n  \n  const buildWordList = useCallback(async () => {\n    let minLength, maxLength;\n    if (difficulty === 'easy') {\n      minLength = 3;\n      maxLength = 7;\n    } else if (difficulty === 'medium') {\n      minLength = 4\n      maxLength = 9;\n    } else {\n      minLength = 9\n      maxLength = 15;\n    }\n    let fetchedWords = await fetchWords(minLength, maxLength).then(response => response);\n    setWords(fetchedWords);\n  }, [setWords]);\n\n  useEffect(() => {\n    buildWordList();\n  }, [buildWordList]);\n\n  useKeyPress(key => {\n    !startTime && setStartTime(currentTime());\n    let currentWord = words[words.length - 1];\n    let currentLetter = currentWord.charAt(letterIndex);\n    if (key === currentLetter) {\n      fxEnabled && playKeystroke();\n      let tempLetterIndex = letterIndex + 1;\n      if (currentWord.length === tempLetterIndex) {\n        let tempWordList = words.slice();\n        tempWordList.pop();\n        setWordCount(wordCount + 1);\n        if (tempWordList.length === 0) {\n          setLevel(level + 1);\n          setWords(buildWordList());\n          setScrollSpeed(scrollSpeed - 2);\n        } else\n        setWords(tempWordList);\n        setLetterIndex(0);\n      } else\n      setLetterIndex(tempLetterIndex);\n    } else {\n      fxEnabled && playMissedKeystroke();\n      (difficulty === 'medium' || difficulty === 'difficult') && setLetterIndex(0);\n    }\n  })\n\n  return (\n    <section className=\"typing-game\">\n      <div className=\"game-info\">\n        <Level level={level} />\n        <Difficulty difficulty={difficulty} />\n        <FX handleClick={() => setFxEnabled(!fxEnabled)} fxEnabled={fxEnabled} />\n      </div>\n      {words.length > 0 && \n        <CurrentWords \n          words={words} \n          setWords={setWords} \n          letterIndex={letterIndex} \n          scrollSpeed={scrollSpeed} \n          setGameOver={setGameOver}\n        />}\n      {gameOver && \n        <GameOver wordCount={wordCount} startTime={startTime} wpm={wpm} />}\n    </section>\n  )\n}","/Users/robwatkins/Dev/react-apps/typing-game/src/components/CurrentWords.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/Level.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/GameOver.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/FX.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/hooks/useKeyPress.js",[],["61","62"],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/Difficulty.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/utils/time.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/utils/fetchWords.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":22,"column":15,"nodeType":"69","messageId":"70","endLine":22,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":41,"column":6,"nodeType":"73","endLine":41,"endColumn":16,"suggestions":"74"},{"ruleId":"63","replacedBy":"75"},{"ruleId":"65","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'setWpm' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'difficulty'. Either include it or remove the dependency array.","ArrayExpression",["79"],["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [difficulty]",{"range":"82","text":"83"},[1569,1579],"[difficulty]"]