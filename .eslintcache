[{"/Users/robwatkins/Dev/react-apps/typing-game/src/index.js":"1","/Users/robwatkins/Dev/react-apps/typing-game/src/reportWebVitals.js":"2","/Users/robwatkins/Dev/react-apps/typing-game/src/App.js":"3","/Users/robwatkins/Dev/react-apps/typing-game/src/components/StartScreen.js":"4","/Users/robwatkins/Dev/react-apps/typing-game/src/components/TypingGame.js":"5","/Users/robwatkins/Dev/react-apps/typing-game/src/components/CurrentWords.js":"6","/Users/robwatkins/Dev/react-apps/typing-game/src/components/Level.js":"7","/Users/robwatkins/Dev/react-apps/typing-game/src/fetchWords.js":"8","/Users/robwatkins/Dev/react-apps/typing-game/src/components/GameOver.js":"9","/Users/robwatkins/Dev/react-apps/typing-game/src/components/FX.js":"10","/Users/robwatkins/Dev/react-apps/typing-game/src/hooks/useKeyPress.js":"11","/Users/robwatkins/Dev/react-apps/typing-game/src/components/Difficulty.js":"12"},{"size":507,"mtime":1611424628290,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611420762882,"results":"15","hashOfConfig":"14"},{"size":697,"mtime":1612977815711,"results":"16","hashOfConfig":"14"},{"size":1013,"mtime":1612640245788,"results":"17","hashOfConfig":"14"},{"size":2903,"mtime":1612977949127,"results":"18","hashOfConfig":"14"},{"size":1552,"mtime":1612626579691,"results":"19","hashOfConfig":"14"},{"size":159,"mtime":1611880535814,"results":"20","hashOfConfig":"14"},{"size":415,"mtime":1612639911538,"results":"21","hashOfConfig":"14"},{"size":158,"mtime":1612113665106,"results":"22","hashOfConfig":"14"},{"size":389,"mtime":1613001628939,"results":"23","hashOfConfig":"14"},{"size":658,"mtime":1612571071288,"results":"24","hashOfConfig":"14"},{"size":597,"mtime":1612998552732,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1vuo62a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/robwatkins/Dev/react-apps/typing-game/src/index.js",[],["52","53"],"/Users/robwatkins/Dev/react-apps/typing-game/src/reportWebVitals.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/App.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/StartScreen.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/TypingGame.js",["54"],"import React, { useState, useEffect, useCallback } from 'react';\nimport useSound from 'use-sound';\nimport { useKeyPress } from '../hooks/useKeyPress';\nimport { fetchWords } from '../fetchWords';\nimport Level from './Level';\nimport CurrentWords from './CurrentWords';\nimport correctKeyStroke from '../sounds/correctKeyStroke2.wav';\nimport incorrectKeyStroke from '../sounds/incorrectKeyStroke.wav';\nimport FX from './FX';\nimport GameOver from './GameOver';\nimport Difficulty from './Difficulty';\n\nexport default function TypingGame({ difficulty }) {\n  const [words, setWords] = useState([]);\n  const [letterIndex, setLetterIndex] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [scrollSpeed, setScrollSpeed] = useState(25);\n  const [gameOver, setGameOver] = useState(false);\n  const [fxEnabled, setFxEnabled] = useState(false);\n  const [playKeystroke] = useSound(correctKeyStroke);\n  const [playMissedKeystroke] = useSound(incorrectKeyStroke);\n  \n  const buildWordList = useCallback(async () => {\n    let minLength, maxLength;\n    if (difficulty === 'easy') {\n      console.log('easy', true);\n      minLength = 3;\n      maxLength = 7;\n    } else if (difficulty === 'medium') {\n      console.log('medium: ', true);\n      minLength = 4\n      maxLength = 9;\n    } else {\n      console.log('difficult: ', true)\n      minLength = 9\n      maxLength = 15;\n    }\n    let fetchedWords = await fetchWords(minLength, maxLength).then(response => response);\n    setWords(fetchedWords);\n  }, [setWords]);\n\n  useEffect(() => {\n    buildWordList();\n  }, [buildWordList]);\n\n  useKeyPress(key => {\n    let currentWord = words[words.length - 1];\n    let currentLetter = currentWord.charAt(letterIndex);\n    if (key === currentLetter) {\n      fxEnabled && playKeystroke();\n      let tempLetterIndex = letterIndex + 1;\n      if (currentWord.length === tempLetterIndex) {\n        let tempWordList = words.slice();\n        tempWordList.pop();\n        if (tempWordList.length === 0) {\n          setLevel(level + 1);\n          setWords(buildWordList());\n          setScrollSpeed(scrollSpeed - 2);\n        } else\n        setWords(tempWordList);\n        setLetterIndex(0);\n      } else\n      setLetterIndex(tempLetterIndex);\n    } else {\n      fxEnabled && playMissedKeystroke();\n      (difficulty === 'medium' || difficulty === 'difficult') && setLetterIndex(0);\n    }\n  })\n\n  return (\n    <section className=\"typing-game\">\n      <div className=\"game-info\">\n        <Level level={level} />\n        <Difficulty difficulty={difficulty} />\n        <FX handleClick={() => setFxEnabled(!fxEnabled)} fxEnabled={fxEnabled} />\n      </div>\n      {words.length > 0 && \n        <CurrentWords \n          words={words} \n          setWords={setWords} \n          letterIndex={letterIndex} \n          scrollSpeed={scrollSpeed} \n          setGameOver={setGameOver}\n        />}\n      {gameOver && <GameOver />}\n    </section>\n  )\n}","/Users/robwatkins/Dev/react-apps/typing-game/src/components/CurrentWords.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/Level.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/fetchWords.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/GameOver.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/FX.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/hooks/useKeyPress.js",[],"/Users/robwatkins/Dev/react-apps/typing-game/src/components/Difficulty.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":40,"column":6,"nodeType":"61","endLine":40,"endColumn":16,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'difficulty'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [difficulty]",{"range":"68","text":"69"},[1493,1503],"[difficulty]"]